facet_grid(~`Feature Type`, scales = "free", rows = 2)
theme(plot.title = element_text(hjust = 0.5))
ggplot(outlier_formatted, aes(x = reorder(Features, `Num Outliers`), y = value, fill = `Outlier Type`))+
geom_bar(stat = 'identity',  position = "stack" ) +
coord_flip()+
labs(title = "Outliers per Feature: High vs Low Valued",
y="Number of Outliers",fill="Outlier Type",x="Features")+
theme_bw()+
facet_grid(~`Feature Type`, scales = "free", rows = 2)+
theme(plot.title = element_text(hjust = 0.5))
ggplot(outlier_formatted, aes(x = reorder(Features, `Num Outliers`), y = value, fill = `Outlier Type`))+
geom_bar(stat = 'identity',  position = "stack" ) +
coord_flip()+
labs(title = "Outliers per Feature: High vs Low Valued",
y="Number of Outliers",fill="Outlier Type",x="Features")+
theme_bw()+
facet_wrap(~`Feature Type`, scales = "free", nrow = 2)+
theme(plot.title = element_text(hjust = 0.5))
ggplot(outlier_formatted, aes(x = reorder(Features, `Num Outliers`), y = value, fill = `Outlier Type`))+
geom_bar(stat = 'identity',  position = "stack" ) +
coord_flip()+
labs(title = "Outliers per Feature: High vs Low Valued",
y="Number of Outliers",fill="Outlier Type",x="Features")+
theme_bw()+
facet_wrap(~`Feature Type`, nrow = 2)+
theme(plot.title = element_text(hjust = 0.5))
ggplot(outlier_formatted, aes(x = reorder(Features, `Num Outliers`), y = value, fill = `Outlier Type`))+
geom_bar(stat = 'identity',  position = "stack" ) +
coord_flip()+
labs(title = "Outliers per Feature: High vs Low Valued",
y="Number of Outliers",fill="Outlier Type",x="Features")+
theme_bw()+
facet_wrap(~`Feature Type`, nrow = 2, drop = T)+
theme(plot.title = element_text(hjust = 0.5))
ggplot(outlier_formatted, aes(x = reorder(Features, `Num Outliers`), y = value, fill = `Outlier Type`))+
geom_bar(stat = 'identity',  position = "stack" ) +
coord_flip()+
labs(title = "Outliers per Feature: High vs Low Valued",
y="Number of Outliers",fill="Outlier Type",x="Features")+
theme_bw()+
facet_wrap(Features~`Feature Type`, nrow = 2, drop = T)+
theme(plot.title = element_text(hjust = 0.5))
ggplot(outlier_formatted, aes(x = reorder(Features, `Num Outliers`), y = value, fill = `Outlier Type`))+
geom_bar(stat = 'identity',  position = "stack" ) +
coord_flip()+
labs(title = "Outliers per Feature: High vs Low Valued",
y="Number of Outliers",fill="Outlier Type",x="Features")+
theme_bw()+
facet_wrap(.~`Feature Type`, nrow = 2, drop = T)+
theme(plot.title = element_text(hjust = 0.5))
ggplot(outlier_formatted, aes(x = reorder(Features, `Num Outliers`), y = value, fill = `Outlier Type`))+
geom_bar(stat = 'identity',  position = "stack" ) +
coord_flip()+
labs(title = "Outliers per Feature: High vs Low Valued",
y="Number of Outliers",fill="Outlier Type",x="Features")+
theme_bw()+
facet_wrap(`Feature Type`, nrow = 2, drop = T)+
theme(plot.title = element_text(hjust = 0.5))
ggplot(outlier_formatted, aes(x = reorder(Features, `Num Outliers`), y = value, fill = `Outlier Type`))+
geom_bar(stat = 'identity',  position = "stack" ) +
coord_flip()+
labs(title = "Outliers per Feature: High vs Low Valued",
y="Number of Outliers",fill="Outlier Type",x="Features")+
theme_bw()+
facet_wrap(~`Feature Type`, nrow = 2, drop = T)+
theme(plot.title = element_text(hjust = 0.5))
ggplot(outlier_formatted, aes(x = reorder(Features, `Num Outliers`), y = value, fill = `Outlier Type`))+
geom_bar(stat = 'identity',  position = "stack" ) +
coord_flip()+
labs(title = "Outliers per Feature: High vs Low Valued",
y="Number of Outliers",fill="Outlier Type",x="Features")+
theme_bw()+
facet_wrap(~`Feature Type`, nrow = 2, drop = T, scales = "free_x")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(outlier_formatted, aes(x = reorder(Features, `Num Outliers`), y = value, fill = `Outlier Type`))+
geom_bar(stat = 'identity',  position = "stack" ) +
coord_flip()+
labs(title = "Outliers per Feature: High vs Low Valued",
y="Number of Outliers",fill="Outlier Type",x="Features")+
theme_bw()+
facet_wrap(~`Feature Type`, nrow = 2, drop = T, scales = "free_y")+
theme(plot.title = element_text(hjust = 0.5))
library(factoextra)
library(cluster)
library(fpc)
library(NbClust)
library(ggplot2)
library(plotly)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_cont_std.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
View(features)
View(features)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_cont_std.csv",
header = T)
d <- dist(features, method = "euclidean") # distance matrix
View(data)
View(data)
View(features)
View(features)
View(features)
View(features)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_cont_std.csv",
header = T, row.names = 1)
d <- dist(features, method = "euclidean") # distance matrix
library(dbscan)
dbscan::kNNdistplot(d, k =  60)
kdistinfo <- dbscan::kNNdist(d, k =  60)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "X-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot")+
coord_cartesian(xlim = c(155000,165000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "X-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot")+
coord_cartesian(xlim = c(165000,175000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "X-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot")+
coord_cartesian(xlim = c(175000,190000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
set.seed(111)
eps = c(8,9,10,11,12,13,14,15, 16, 17, 18,19,20)
minpts = c(60,75,80,100)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
if(sum(dbcluster$cluster) ==0){next}
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2")
View(dbsummary)
View(dbsummary)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca24.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
dbscan::kNNdistplot(d, k =  48)
kdistinfo <- dbscan::kNNdist(d, k =  48)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "X-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot")+
coord_cartesian(xlim = c(140000,150000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
set.seed(111)
eps = c(8,9,10,11,12,13,14,15, 16, 17, 18)
minpts = c(48, 50,60,75)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
if(sum(dbcluster$cluster) ==0){next}
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2")
View(dbsummary)
View(dbsummary)
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca24_noiseadj_seed111.csv", row.names= F)
dbscan::kNNdistplot(d, k =  24)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca24.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
dbscan::kNNdistplot(d, k =  24)
dbscan::kNNdistplot(d, k =  48)
kdistinfo <- dbscan::kNNdist(d, k =  48)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "X-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot")+
coord_cartesian(xlim = c(140000,150000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "X-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot")+
coord_cartesian(xlim = c(1350000,148000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "X-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot")+
coord_cartesian(xlim = c(135000,148000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
View(dbsummary)
View(dbsummary)
eps = c(19,20)
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
if(sum(dbcluster$cluster) ==0){next}
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
warnings()
View(dbsummary)
View(dbsummary)
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca24_noiseadj_seed111.csv", row.names= F)
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "47-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot")+
coord_cartesian(xlim = c(135000,148000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "47-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts 48")+
coord_cartesian(xlim = c(135000,148000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "47-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 48)")+
coord_cartesian(xlim = c(135000,148000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
eps = c(8,9,10,11,12,13,14,15, 16, 17, 18, 19, 20)
minpts = 100
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
if(sum(dbcluster$cluster) ==0){next}
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
View(dbsummary)
View(dbsummary)
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca24_noiseadj_seed111.csv", row.names= F)
dbscan::kNNdistplot(d, k =  99)
kdistinfo <- dbscan::kNNdist(d, k =  99)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "47-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 48)")+
coord_cartesian(xlim = c(280000,300000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca10.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
dbscan::kNNdistplot(d, k =  19)
kdistinfo <- dbscan::kNNdist(d, k =  19)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "19-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 20)")+
coord_cartesian(xlim = c(55000,60000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "19-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 20)")+
coord_cartesian(xlim = c(50000,58000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
dbscan::kNNdistplot(d, k =  49)
kdistinfo <- dbscan::kNNdist(d, k =  49)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "19-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 20)")+
coord_cartesian(xlim = c(140000,150000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca5.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
dbscan::kNNdistplot(d, k =  9)
kdistinfo <- dbscan::kNNdist(d, k =  9)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(25000,30000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(20000,28000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
dbscan::kNNdistplot(d, k =  49)
kdistinfo <- dbscan::kNNdist(d, k =  49)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(140000,150000),
ylim = c(0,50))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
dbscan::kNNdistplot(d, k =  9)
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(25000,28000),
ylim = c(0,35))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(2500,2800),
ylim = c(0,35))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(25000,35000),
ylim = c(0,35))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(35000,40000),
ylim = c(0,35))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
kdistinfo <- dbscan::kNNdist(d, k =  9)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(22000,28000),
ylim = c(0,35))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(22000,28000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca10.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
kdistinfo <- dbscan::kNNdist(d, k =  19)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(52000,60000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "9-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 10)")+
coord_cartesian(xlim = c(52000,59000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "19-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 20)")+
coord_cartesian(xlim = c(52000,59000),
ylim = c(0,35))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "19-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 20)")+
coord_cartesian(xlim = c(52000,59000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca24.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
kdistinfo <- dbscan::kNNdist(d, k =  47)
kdistsorted <- data.frame(1:length(kdistinfo), kdistinfo[order(kdistinfo)])
colnames(kdistsorted) <-c('points', "distance")
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "47-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 28)")+
coord_cartesian(xlim = c(138000,148000),
ylim = c(0,35))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "47-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 28)")+
coord_cartesian(xlim = c(135000,145000),
ylim = c(0,35))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "47-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 28)")+
coord_cartesian(xlim = c(135000,145000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "47-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 48)")+
coord_cartesian(xlim = c(135000,145000),
ylim = c(0,30))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(kdistsorted, aes( x = points, y = distance))+
geom_line()+
labs(y = "47-Distance", x = "Points (sorted by distance)",
title = "KNN Distance Plot (Minpts: 48)")+
coord_cartesian(xlim = c(135000,145000),
ylim = c(0,35))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca5.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
library(ggplot2)
pca5results <- read.csv("../../Outputs/Clustering/r_db_clustering_summary_pca5_noiseadj_more.csv")
