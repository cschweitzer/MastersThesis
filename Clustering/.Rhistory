header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
hcluster <- hclust(d, method = "ward.D")
hclust3 <- cutree(hcluster, k=3)
hcop <- cophenetic(hcluster)
cor(d, hcop)
hc_stats <- cluster.stats(d, hclust3)
hc_stats
dbcluster <- dbscan(features, 2, 4, method = "raw")
stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(2,4,
stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
?fviz_cluster
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3", "V4"))
get_clust_tendency(features)
get_clust_tendency(features,2500)
get_clust_tendency(features,750)
kcluster <- kmeans(features, 5)
stats <- cluster.stats(d,  dbcluster$cluster)
dbstats <- cluster.stats(d,  dbcluster$cluster)
db_stats <- cluster.stats(d,  dbcluster$cluster)
rm(stats)
rm(dbstats)
save.image("~/Tilburg/Research Traineeship/Ghent Data/Project_v2/MastersThesis/Clustering/Clustering Data Image.RData")
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca3select.csv", row.names = 1,
header = FALSE)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca3select.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
get_clust_tendency(features,500)
load("~/Tilburg/Research Traineeship/Ghent Data/Project_v2/MastersThesis/Clustering/Clustering Data Image.RData")
?dbscan
library(factoextra)
library(cluster)
library(fpc)
library(NbClust)
library(ggplot2)
library(plotly)
?dbscan
dbcluster$cluster
db_stats
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
db_stats
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3", "V4"))
?fviz_cluster
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = 0)
db_stats
install.packages("dbscan")
library(dbscan)
kNNdistplot(features, k=4)
abline(h=0.4, col="r
"ed"
kNNdistplot(features, k=4)
abline(h=0.4, col="red")
?features
?dbscan
db_cluster_alt = dbscan::dbscan(features, 3, 4)
hullplot(features, db_cluster_alt$cluster)
?hullplot
db_cluster_alt$cluster
str(db_cluster_alt$cluster)
replace(db_cluster_noiseadj, db_cluster_noiseadj==0, max(db_cluster_noiseadj)+1)
db_cluster_noiseadj <- dbcluster$cluster
replace(db_cluster_noiseadj, db_cluster_noiseadj==0, max(db_cluster_noiseadj)+1)
db_cluster_noiseadj
db_cluster_noiseadj <- replace(db_cluster$cluster, db_cluster$cluster==0, max(db_cluster$cluster)+1)
db_cluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
db_stats2
eps = c(2,3,4,5,8,10)
minpts = c(2,3,4,5,8,10)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size","SSE","avg_within","avg_btn",
"Sil","Dunn2")
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca5_noiseadj.csv", row.names= F)
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"))
dbcluster <- dbscan(features, 2, 4, method = "raw")
dbcluster <- fpd::dbscan(features, 2, 4, method = "raw")
dbcluster <- fpc::dbscan(features, 2, 4, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
db_stats
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
db_stats2
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca5.csv", row.names = 1,
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
eps = c(2,3,4,5,8,10)
minpts = c(2,3,4,5,8,10)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size","SSE","avg_within","avg_btn",
"Sil","Dunn2")
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca5_noiseadj.csv", row.names= F)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca5.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size","SSE","avg_within","avg_btn",
"Sil","Dunn2")
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca5_noiseadj.csv", row.names= F)
dbcluster <- fpc::dbscan(features, 2, 4, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
db_stats
db_stats2
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"))
save.image("~/Tilburg/Research Traineeship/Ghent Data/Project_v2/MastersThesis/Clustering/Clustering Data Image.RData")
load("~/Tilburg/Research Traineeship/Ghent Data/Project_v2/MastersThesis/Clustering/Clustering Data Image.RData")
dbcluster$cluster
write.csv(dbcluster$cluster, "../../Outputs/Clustering/cluster_indices_dbscan_3_4.csv")
write.csv(dbcluster$cluster, "../../Outputs/Clustering/cluster_indices_dbscan_3_4.csv", row.names = F)
cluster_indices <- read.csv("../../Outputs/Clustering/cluster_indices_dbscan_3_4.csv", row.names = F)
cluster_indices <- read.csv("../../Outputs/Clustering/cluster_indices_dbscan_3_4.csv")
user_features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv)
user_features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv")
combi <- cbind(user_features, cluster_indices)
table(combi)
xtabs
?xtabs
xtabs(~x, combi)
library(dplyr)
cluster1 <- filter(combi, x == 2)
cluster2 <- filter(combi, x == 3)
describe(cluster1)
summary(cluster1)
?summary
View(cluster1)
View(cluster1)
type(summary(cluster1))
str(summary(cluster1))
data.frame(summary(cluster1))
?summarise_each
summarise_each(cluster1, funs(mean, median, std))
summarise_each(cluster1, funs(mean, median, std, na.rm = True))
summarise_each(cluster1, funs((std, na.rm = True))
View(cluster1)
View(cluster1)
summarise_each(cluster1 ,funs(mean, median, std))
cluster_indices <- read.csv("../../Outputs/Clustering/cluster_indices_dbscan_3_4.csv", index = "id")
cluster_indices <- read.csv("../../Outputs/Clustering/cluster_indices_dbscan_3_4.csv", row.names = "id")
user_features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv",row.names = "id")
user_features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv",row.names = "id", header = T)
cluster_indices <- read.csv("../../Outputs/Clustering/cluster_indices_dbscan_3_4.csv", row.names = "id", header = T)
cluster_indices <- read.csv("../../Outputs/Clustering/cluster_indices_dbscan_3_4.csv")
combi <- cbind(user_features, cluster_indices)
summarise_each(cluster1 ,funs(mean, median, std))
cluster1 <- filter(combi, x == 2)
cluster2 <- filter(combi, x == 3)
summarise_each(cluster1 ,funs(mean, median, std))
summarise_each(cluster1 ,funs(mean, median, sd))
summary <- summarise_each(cluster1 ,funs(mean, median, sd))
summary <- summarise_all(cluster1 ,funs(mean, median, sd))
View(summary)
View(summary)
summary <- cbind(summary, summarise_all(cluster2 ,funs(mean, median, sd)))
View(summary)
View(summary)
write.csv(summary, "../../Outputs/Descriptives/cluster_summary_info.csv")
plot_ly(x =features$V2,y = features$V3,  z=features$V4,
type="scatter3d", mode="markers", color=factor(dbcluster$cluster))
library(factoextra)
library(cluster)
library(fpc)
library(NbClust)
library(ggplot2)
library(plotly)
summary <- summarise_all(cluster1 ,funs(mean, median, sd))
summary <- rbind(summary, summarise_all(cluster2 ,funs(mean, median, sd)))
write.csv(summary, "../../Outputs/Descriptives/cluster_summary_info.csv")
?plot_ly
plot_ly(x =hclust3_toplot$V2,y = hclust3_toplot$V3,  z=hclust3_toplot$V4,
type="scatter3d", mode="markers", color=factor(hclust3))
hclust3_toplot <- data.frame(features[,1:3], factor(hclust3))
names(hclust3_toplot) <- c("PCA 1","PCA 2", "Cluster")
ggplot(hclust3_toplot, aes(`PCA 1`, `PCA 2`))+
geom_point(aes(colour=Cluster), size=3)
ggplot(hclust3_toplot, aes(`PCA 1`, `PCA 2`))+
geom_point(aes(colour=Cluster), size=3) +
geom_title("Hierarchical")
ggplot(hclust3_toplot, aes(`PCA 1`, `PCA 2`))+
geom_point(aes(colour=Cluster), size=3) +
title("Hierarchical")
plot_ly(x =hclust3_toplot$V2,y = hclust3_toplot$V3,  z=hclust3_toplot$V4,
type="scatter3d", mode="markers", color=factor(hclust3))
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"))
plot_ly(x =features$V2,y = features$V3,  z=features$V4,
type="scatter3d", mode="markers", color=factor(dbcluster$cluster))
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"))
library(factoextra)
library(cluster)
library(fpc)
library(NbClust)
library(ggplot2)
library(plotly)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca10.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
eps = c(2,3,4,5,8,10)
minpts = c(2,3,4,5,8,10)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
warnings()
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size","SSE","avg_within","avg_btn",
"Sil","Dunn2")
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca10_noiseadj.csv", row.names= F)
dbcluster <- fpc::dbscan(features, 2, 3, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"))
plot_ly(x =features$V2,y = features$V3,  z=features$V4,
type="scatter3d", mode="markers", color=factor(dbcluster$cluster))
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca5.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
eps = c(.5, 1, 2,3,4,5,8,10, 15
minpts = c(3,5,10, 15, 20, 30, 50, 100)
dbsummary <- data.frame()
eps = c(.5, 1, 2,3,4,5,8,10, 15)
minpts = c(3,5,10, 15, 20, 30, 50, 100)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
View(dbsummary)
View(dbsummary)
?cluster.stats
dbcluster <- fpc::dbscan(features, .5, 100, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
eps = c(.5, 1, 2,3,4,5,8,10, 15)
minpts = c(3,5,10, 15, 20, 30, 50)
dbsummary <- data.frame()
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
warnings()
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2")
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca5_noiseadj_2.csv", row.names= F)
View(dbsummary)
View(dbsummary)
dbcluster <- fpc::dbscan(features, .5, 5, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"))
plot_ly(x =features$V2,y = features$V3,  z=features$V4,
type="scatter3d", mode="markers", color=factor(dbcluster$cluster))
plot_ly(x =features$V5,y = features$V3,  z=features$V4,
type="scatter3d", mode="markers", color=factor(dbcluster$cluster))
dbcluster <- fpc::dbscan(features, 1, 50, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
db_stats2
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"))
dbcluster <- fpc::dbscan(features, 1, 10, method = "raw")
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"))
plot_ly(x =features$V2,y = features$V3,  z=features$V4,
type="scatter3d", mode="markers", color=factor(dbcluster$cluster))
eps = c(.5, 1, 2,3,4,5,8,10, 15)
minpts = c(2,3,4,5,8,10, 15, 20, 30, 50)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2")
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca5_noiseadj_3.csv", row.names= F)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca10.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
eps = c(.5, 1, 2,3,4,5,8,10, 15)
minpts = c(2,3,4,5,8,10, 15, 20, 30, 50)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
View(dbsummary)
View(dbsummary)
dbcluster <- fpc::dbscan(features, .5, 20, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
dbcluster$cluster
sum(dbcluster$cluster)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, .5, 20, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
if(sum(dbcluster$cluster) ==0){next}
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2")
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca10_noiseadj.csv", row.names= F)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, .5, 20, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
if(sum(dbcluster$cluster) ==0){
temp <- c(i,j,0, 0, 0, 0,
0,0, 0,
0, 0)
} else {
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
}
dbsummary <- rbind(dbsummary, temp)
}
}
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2")
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca10_noiseadj.csv", row.names= F)
dbsummary <- data.frame()
for (i in eps){
for (j in minpts){
dbcluster <- fpc::dbscan(features, i, j, method = "raw")
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
if(sum(dbcluster$cluster) ==0){next}
stats <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(i,j, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2)
dbsummary <- rbind(dbsummary, temp)
}
}
warnings()
colnames(dbsummary) <- c("eps","minpts",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2")
write.csv(dbsummary,"../../Outputs/Clustering/r_db_clustering_summary_pca10_noiseadj.csv", row.names= F)
?davies
??davies
??db
?index.db
?index::db
ggplot(dbsummary, aes(x=dbsummary$eps, y=c(), color=highest_ev_chosen)) +
geom_line(aes(y = dbsummary$SSE, col = "SSE")) +
#geom_line(aes(y = y2, col = "y2"))
facet_grid(.~dbsummary$minpts)
library(factoextra)
library(cluster)
library(fpc)
library(NbClust)
library(ggplot2)
library(plotly)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca5.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
dbcluster <- fpc::dbscan(features, .5, 5, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
db_stats
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
db_stats2
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"))
plot_ly(x =features$V2,y = features$V3,  #z=features$V4,
type="scatter", mode="markers", color=factor(dbcluster$cluster))
plot_ly(x =features$V2,y = features$V3,
type="scatter", mode="markers", color=factor(dbcluster_noiseadj))
plot_ly(x =features$V2,y = features$V3,  z=features$V4,
type="scatter3d", mode="markers", color=factor(dbcluster$cluster))
?fviz_cluster
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"))
dbcluster <- fpc::dbscan(features, .5, 30, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
db_stats
db_stats2
?silhouette
?cluster::silhouette
plot.dbcluster
plot(dbscluser, features)
plot(dbscluster, features)
plot(dbcluster, features)
db_stats
db_stats2
