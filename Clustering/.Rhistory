ggplot(ksumadj, aes(x=n_clusters, y = min_cl_size))+
geom_line()+
labs(x = "k",
y = "SSE",
title = "K-Means: Clusters vs Min Cluster Size")+
scale_x_continuous(limits = c(1,15, 1))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ksumadj <- filter(ksummary, n_clusters > 3)
ggplot(ksumadj, aes(x=n_clusters, y = min_cl_size))+
geom_line()+
labs(x = "k",
y = "SSE",
title = "K-Means: Clusters vs Min Cluster Size")+
scale_x_continuous(limits = c(1,15))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ksumadj <- filter(ksummary, n_clusters > 3)
ggplot(ksumadj, aes(x=n_clusters, y = min_cl_size))+
geom_line()+
labs(x = "k",
y = "SSE",
title = "K-Means: Clusters vs Min Cluster Size")+
scale_x_continuous(limits = c(3,15))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
View(ksumadj)
View(ksumadj)
ksumadj <- filter(ksummary, n_clusters > 2)
ggplot(ksumadj, aes(x=n_clusters, y = min_cl_size))+
geom_line()+
labs(x = "k",
y = "SSE",
title = "K-Means: Clusters vs Min Cluster Size")+
scale_x_continuous(breaks=c(3,6,9, 12))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ksumadj <- filter(ksummary, n_clusters > 2)
ggplot(ksumadj, aes(x=n_clusters, y = min_cl_size))+
geom_line()+
labs(x = "k",
y = "SSE",
title = "K-Means: Clusters vs Min Cluster Size")+
scale_x_continuous(breaks=c(3,6,9, 12, 15))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ksumadj <- filter(ksummary, n_clusters > 2)
ggplot(ksumadj, aes(x=n_clusters, y = min_cl_size))+
geom_line()+
labs(x = "k",
y = "SSE",
title = "K-Means: Clusters vs Min Cluster Size")+
scale_x_continuous(breaks=c(4,6,8,10, 12, 14))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(ksumadj, aes(x=n_clusters, y = min_cl_size))+
geom_line()+
labs(x = "k",
y = "Minimum Cluster Size",
title = "K-Means: Clusters vs Min Cluster Size")+
scale_x_continuous(breaks=c(4,6,8,10, 12, 14))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
db_stats2
dbcluster <- fpc::dbscan(features, 1, 10, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
db_stats2
dbcluster <- fpc::dbscan(features, 5, 4, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
clusterdf <- cbind(features, dbcluster$cluster,
factor(dbcluster$cluster, labels = c("Noise", "Cluster 1", "Cluster 2")))
colnames(clusterdf) <- c("PC1",
"PC2",
"PC3",
"PC4",
"PC5",
"cluster_val",
"Cluster")
dbcluster <- fpc::dbscan(features, 4, 5, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
clusterdf <- cbind(features, dbcluster$cluster,
factor(dbcluster$cluster, labels = c("Noise", "Cluster 1", "Cluster 2")))
colnames(clusterdf) <- c("PC1",
"PC2",
"PC3",
"PC4",
"PC5",
"cluster_val",
"Cluster")
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V1", "V2"),
pointsize = 1.5, labelsize = 12, main = "DBSCAN Clusters",
shape = 19, outlier.shape = 5,
show.clust.cent = F,
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(filter(clusterdf, cluster_val > 0), aes(x = PC1, y = PC2, color = Cluster))+
geom_point()+
labs(x = "PCA Component 1 (17.0%)",
y = "PCA Component 2 (11.5%)",
legend.title = "Clusters",
title = "DBSCAN Clusters - Without Noise")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
write.csv(clusterdf, "../../Outputs/Clustering/cluster_indices_dbscan_4_5.csv", row.names = F)
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
db_stats2
ggplot(clusterdf, aes(x = PC1, y = PC2, color = Cluster))+
geom_point()+
labs(x = "PCA Component 1 (17.0%)",
y = "PCA Component 2 (11.5%)",
legend.title = "Clusters",
title = "DBSCAN Clusters")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(clusterdf, aes(x = PC1, y = PC2, color = Cluster))+
geom_point()+
labs(x = "PCA Component 1 (17.0%)",
y = "PCA Component 2 (11.5%)",
legend.title = "Clusters",
title = "DBSCAN Clusters (2 PC)")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V1", "V2"),
pointsize = 1.5, labelsize = 12, main = "DBSCAN Clusters (2 PC)",
shape = 19, outlier.shape = 5,
show.clust.cent = F,
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(plot.title = element_text(hjust = 0.5))
kvals <- c(2,3,4,5,6,7,8,9,10,11,12, 13,14,15, 16, 17, 18, 19, 20)
View(ksummary)
View(ksummary)
kvals <- c(16, 17, 18, 19, 20)
for (k in kvals){
kcluster <- kmeans(features, k)
stats <- cluster.stats(d, kcluster$cluster)
temp <- c(k, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2, kcluster$tot.withinss,  kcluster$betweenss)
ksummary <- rbind(ksummary, temp)
}
View(ksummary)
View(ksummary)
kcluster
kcluster$iter
kcluster$ifault
for (k in kvals){
kcluster <- kmeans(features, k)
stats <- cluster.stats(d, kcluster$cluster)
temp <- c(k, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2, kcluster$tot.withinss,  kcluster$betweenss,
kcluster$iter, kcluster$ifault)
ksummary <- rbind(ksummary, temp)
}
View(ksummary)
View(ksummary)
kvals <- c(2,3,4,5,6,7,8,9,10,11,12, 13,14,15, 16, 17, 18, 19, 20)
#kvals <- c(16, 17, 18, 19, 20)
ksummary <- data.frame()
for (k in kvals){
kcluster <- kmeans(features, k)
stats <- cluster.stats(d, kcluster$cluster)
temp <- c(k, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2, kcluster$tot.withinss,  kcluster$betweenss,
kcluster$iter, kcluster$ifault)
ksummary <- rbind(ksummary, temp)
}
View(ksummary)
View(ksummary)
colnames(ksummary) <- c("k",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2", "kcl_withinss", "kclbetweenss",
"iter","ifault")
??seed
.Random.Seed
.Random.seed
write.csv(ksummary, "../../Outputs/Clustering/r_kmeans_summary_to20.csv", row.names = F)
set.seed(111)
kvals <- c(2,3,4,5,6,7,8,9,10,11,12, 13,14,15, 16, 17, 18, 19, 20)
#kvals <- c(16, 17, 18, 19, 20)
ksummary <- data.frame()
for (k in kvals){
kcluster <- kmeans(features, k)
stats <- cluster.stats(d, kcluster$cluster)
temp <- c(k, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2, kcluster$tot.withinss,  kcluster$betweenss,
kcluster$iter, kcluster$ifault)
ksummary <- rbind(ksummary, temp)
}
colnames(ksummary) <- c("k",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2", "kcl_withinss", "kclbetweenss",
"iter","ifault")
write.csv(ksummary, "../../Outputs/Clustering/r_kmeans_summary_seed111.csv", row.names = F)
set.seed(111)
kcluster <- kmeans(features, 9)
clusterdf_k <- cbind(features, kcluster$cluster)
colnames(clusterdf_k) <- c("PC1",
"PC2",
"PC3",
"PC4",
"PC5",
"cluster_val")
write.csv(clusterdf_k, "../../Outputs/Clustering/cluster_indices_kmeans_9.csv", row.names = F)
View(ksummary)
View(ksummary)
ggplot(ksummary, aes(x=n_clusters, y = SSE))+
geom_line()+
labs(x = "k",
y = "SSE",
title = "K-Means: Clusters vs Error")+
ylim(0,45000)+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ksumadj <- filter(ksummary, n_clusters > 2)
ggplot(ksumadj, aes(x=n_clusters, y = min_cl_size))+
geom_line()+
labs(x = "k",
y = "Minimum Cluster Size",
title = "K-Means: Clusters vs Min Cluster Size")+
scale_x_continuous(breaks=c(4,6,8,10, 12, 14))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ksummary <- ksummary %>% filter(n_clusters < 16)
ggplot(ksummary, aes(x=n_clusters, y = SSE))+
geom_line()+
labs(x = "k",
y = "SSE",
title = "K-Means: Clusters vs Error")+
ylim(0,45000)+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ksumadj <- filter(ksummary, n_clusters > 2)
ggplot(ksumadj, aes(x=n_clusters, y = min_cl_size))+
geom_line()+
labs(x = "k",
y = "Minimum Cluster Size",
title = "K-Means: Clusters vs Min Cluster Size")+
scale_x_continuous(breaks=c(4,6,8,10, 12, 14))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
fviz_cluster(kcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"),
pointsize = 1.5, labelsize = 12, main = "K-Means Clusters",
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
shape = 19, outlier.shape = 4,show.clust.cent = F,
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(plot.title = element_text(hjust = 0.5))
fviz_cluster(kcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"),
pointsize = 1.5, labelsize = 12, main = "K-Means 9 Clusters (2 PC)",
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
shape = 19, outlier.shape = 4,show.clust.cent = F,
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(plot.title = element_text(hjust = 0.5))
set.seed(111)
kcluster <- kmeans(features, 8)
fviz_cluster(kcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"),
pointsize = 1.5, labelsize = 12, main = "K-Means 8 Clusters (2 PC)",
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
shape = 19, outlier.shape = 4,show.clust.cent = F,
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(plot.title = element_text(hjust = 0.5))
clusterdf_k <- cbind(features, kcluster$cluster)
colnames(clusterdf_k) <- c("PC1",
"PC2",
"PC3",
"PC4",
"PC5",
"cluster_val")
write.csv(clusterdf_k, "../../Outputs/Clustering/cluster_indices_kmeans_8.csv", row.names = F)
library(FactoMineR)
library(factoextra)
#library(dplyr)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_cont_std.csv", row.names = 1)
PCAres1 <- PCA(contfeat_z, scale.unit = F)
contfeat_z <- read.csv("../../Outputs/Features/cluster_inputs/features_cont_std.csv", row.names = 1)
PCAres1 <- PCA(contfeat_z, scale.unit = F)
library(stats)
PCAres2 <- PCA(contfeat_z)
loadings <- loadings(PCAres3)
PCAres3<-princomp(contfeat_z)
loadings <- loadings(PCAres3)
loadings
loadings$loadings
PCAres1 <- PCA(contfeat_z, scale.unit = F)
loadings <- PCAres1$var
summary(PCAres1)
loadings$coord
loadings$coord$`Dim.1`
library(factoextra)
library(cluster)
library(fpc)
library(NbClust)
library(ggplot2)
library(plotly)
library("gg3D")
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca5.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
dbcluster <- fpc::dbscan(features, 4, 5, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
clusterdf <- cbind(features, dbcluster$cluster,
factor(dbcluster$cluster, labels = c("Noise", "Cluster 1", "Cluster 2")))
colnames(clusterdf) <- c("PC1",
"PC2",
"PC3",
"PC4",
"PC5",
"cluster_val",
"Cluster")
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V1", "V2"),
pointsize = 1.5, labelsize = 12, main = "DBSCAN Clusters (2 PC)",
shape = 19, outlier.shape = 5,
show.clust.cent = F,
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(filter(clusterdf, cluster_val > 0), aes(x = PC1, y = PC2, color = Cluster))+
geom_point()+
labs(x = "PCA Component 1 (17.0%)",
y = "PCA Component 2 (11.5%)",
legend.title = "Clusters",
title = "DBSCAN Clusters - Without Noise")+
theme_bw()+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(filter(clusterdf, cluster_val > 0), aes(x = PC1, y = PC2, color = Cluster))+
geom_point()+
labs(x = "PCA Component 1 (17.0%)",
y = "PCA Component 2 (11.5%)",
legend.title = "Clusters",
title = "DBSCAN Clusters - Excl. Noise")+
theme_bw()+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(clusterdf, aes(x = PC1, y = PC2, color = Cluster))+
geom_point()+
labs(x = "PCA Component 1 (17.0%)",
y = "PCA Component 2 (11.5%)",
legend.title = "Clusters",
title = "DBSCAN Clusters (2 PC)")+
theme_bw()+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
set.seed(111)
kcluster <- kmeans(features, 8)
fviz_cluster(kcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"),
pointsize = 1.5, labelsize = 12, main = "K-Means 8 Clusters (2 PC)",
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
shape = 19, outlier.shape = 4,show.clust.cent = F,
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
fviz_cluster(kcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"),
pointsize = 1.5, labelsize = 12, main = "K-Means 8 Clusters (2 PC)",
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
shape = 19, outlier.shape = 4,show.clust.cent = F,
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=10),
legend.title = element_text(size=12))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
fviz_cluster(kcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"),
pointsize = 1.5, labelsize = 12, main = "K-Means 8 Clusters (2 PC)",
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
shape = 19, outlier.shape = 4,show.clust.cent = F,
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=10),
legend.title = element_text(size=10))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(filter(clusterdf, cluster_val > 0), aes(x = PC1, y = PC2, color = Cluster))+
geom_point()+
labs(x = "PCA Component 1 (17.0%)",
y = "PCA Component 2 (11.5%)",
legend.title = "Clusters",
title = "DBSCAN Clusters - Excl. Noise")+
theme_bw()+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=10),
legend.title = element_text(size=10))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(clusterdf, aes(x = PC1, y = PC2, color = Cluster))+
geom_point()+
labs(x = "PCA Component 1 (17.0%)",
y = "PCA Component 2 (11.5%)",
legend.title = "Clusters",
title = "DBSCAN Clusters (2 PC)")+
theme_bw()+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=10),
legend.title = element_text(size=10))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V1", "V2"),
pointsize = 1.5, labelsize = 12, main = "DBSCAN Clusters (2 PC)",
shape = 19, outlier.shape = 5,
show.clust.cent = F,
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=10),
legend.title = element_text(size=10))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ksummary <- read.csv("../../Outputs/Clustering/r_kmeans_summary_seed111.csv")
View(ksummary)
View(ksummary)
ksummary <- ksummary %>% filter(n_clusters < 16)
ggplot(ksummary, aes(x=n_clusters, y = SSE))+
geom_line()+
labs(x = "k",
y = "SSE",
title = "K-Means: Clusters vs Error")+
ylim(0,45000)+
theme_bw()+  theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=10),
legend.title = element_text(size=10))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
theme(plot.title = element_text(hjust = 0.5))
ksumadj <- filter(ksummary, n_clusters > 2)
ggplot(ksumadj, aes(x=n_clusters, y = min_cl_size))+
geom_line()+
labs(x = "k",
y = "Minimum Cluster Size",
title = "K-Means: Clusters vs Min Cluster Size")+
scale_x_continuous(breaks=c(4,6,8,10, 12, 14))+
theme_bw()+  theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=10),
legend.title = element_text(size=10))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
theme(plot.title = element_text(hjust = 0.5))
View(ksummary)
View(ksummary)
View(ksummary)
View(ksummary)
kcluster <- kmeans(features, 2)
fviz_cluster(kcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"),
pointsize = 1.5, labelsize = 12, main = "K-Means 8 Clusters (2 PC)",
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
shape = 19, outlier.shape = 4,show.clust.cent = F,
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=12),
legend.text = element_text(size=10),
legend.title = element_text(size=10))+
theme(plot.title = element_text(hjust = 0.5, size = 12))
write.csv(clusterdf_k, "../../Outputs/Clustering/cluster_indices_kmeans_2.csv", row.names = F)
clusterdf_k <- cbind(features, kcluster$cluster)
colnames(clusterdf_k) <- c("PC1",
"PC2",
"PC3",
"PC4",
"PC5",
"cluster_val")
write.csv(clusterdf_k, "../../Outputs/Clustering/cluster_indices_kmeans_2.csv", row.names = F)
