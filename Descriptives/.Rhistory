write.csv(stats,output)
return(stats)
}
descriptives("../../Outputs/Features/cont/",
"../../Outputs/Descriptives/descriptive_stats_table_preprocessed.csv")
trains_feat <- readRDS("../../Outputs/Features/cont/trains_topoverall_freq_features")
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value', -id, na.rm = TRUE) %>%
group_by(train) %>%
summarise(pct_users = n()/totalusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
write.csv(trains_top_summary, "../../Outputs/Descriptives/trains_top_summary.csv", row.names = F)
trains_feat <- readRDS("../../Outputs/Features/cont/trains_topoverall_freq_features")
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value', -id, na.rm = TRUE) %>%
group_by(train) %>%
summarise(pct_users = n()/totalusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
library(dplyr)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value', -id, na.rm = TRUE) %>%
group_by(train) %>%
summarise(pct_users = n()/totalusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
library(dplyr)
library(tidyr)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value', -id, na.rm = TRUE) %>%
group_by(train) %>%
summarise(pct_users = n()/totalusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv",
stringsAsFactors = F, row.names = 1)
trains_topoverall_freq_features$trains_topoverall_freq_features
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data[,i])$out
#assign(name, outs)
temp <-c(name, length(outs), length(outs)/length(data[,1]))
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(stats) <- names(features)
names(outlier_info) <- c("feature","num_outliers","proportion_outliers")
features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv",
stringsAsFactors = F, row.names = 1)
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data[,i])$out
#assign(name, outs)
temp <-c(name, length(outs), length(outs)/length(data[,1]))
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
data <- features[,i]
outs <- boxplot.stats(data)$out
#assign(name, outs)
temp <-c(name, length(outs), length(outs)/length(data[,1]))
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
#assign(name, outs)
temp <-c(name, length(outs), length(outs)/length(data[,1]))
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
#assign(name, outs)
temp <-c(name, length(outs), length(outs)/length(data))
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
length(data)
row.names(stats) <- names(features)
outlier_info <- data.frame()
outlier_info <- data.frame()
features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv",
stringsAsFactors = F, row.names = 1)
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
#assign(name, outs)
temp <-c(name, length(outs), length(outs)/length(data))
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(outlier_info) <- names(features)
names(outlier_info) <- c("feature","num_outliers","proportion_outliers")
View(outlier_info)
View(outlier_info)
outlier_info <- data.frame()
features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv",
stringsAsFactors = F, row.names = 1)
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
#assign(name, outs)
temp <-c(length(outs), length(outs)/length(data))
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(outlier_info) <- names(features)
names(outlier_info) <- c(num_outliers","proportion_outliers")
write.csv(outlier_info,output)
return(outlier_info)
}
outliers("../../Outputs/Features/cont/",
"../../Outputs/Descriptives/outlier_info.csv")
names(outlier_info) <- c("num_outliers","proportion_outliers")
View(outlier_info)
View(outlier_info)
mean(data)
mean(outs < mean(data))
outs < mean(data)
outs[outs < mean(data)]
outs[outs > mean(data)]
mean(outs[outs > mean(data)])
mean(outs[outs < mean(data)])
sum(outs > mean(data))
sum(outs < mean(data))
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
num_high_outliers <- sum(outs > mean(data))
avg_low_outliers <- mean(outs[outs > mean(data)])
num_high_outliers <- sum(outs < mean(data))
avg_low_outliers <- mean(outs[outs < mean(data)])
temp <-c(length(outs), length(outs)/length(data),
num_high_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(outlier_info) <- names(features)
names(outlier_info) <- c("num_outliers","proportion_outliers",
"num_low_outliers", "avg_low_outliers",
"num_high_outliers", "avg_high_outliers")
temp <-c(length(outs), length(outs)/length(data),
num_high_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
data <- features[,1]
outs <- boxplot.stats(data)$out
num_high_outliers <- sum(outs > mean(data))
avg_low_outliers <- mean(outs[outs > mean(data)])
num_high_outliers <- sum(outs < mean(data))
avg_low_outliers <- mean(outs[outs < mean(data)])
temp <-c(length(outs), length(outs)/length(data),
num_high_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
num_low_outliers <- sum(outs > mean(data))
avg_low_outliers <- mean(outs[outs > mean(data)])
num_high_outliers <- sum(outs < mean(data))
avg_high_outliers <- mean(outs[outs < mean(data)])
temp <-c(length(outs), length(outs)/length(data),
num_high_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
library(stats)
library(moments)
descriptives <- function(path, files, output){
outlier_info <- data.frame()
features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv",
stringsAsFactors = F, row.names = 1)
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
num_low_outliers <- sum(outs > mean(data))
avg_low_outliers <- mean(outs[outs > mean(data)])
num_high_outliers <- sum(outs < mean(data))
avg_high_outliers <- mean(outs[outs < mean(data)])
temp <-c(length(outs), length(outs)/length(data),
num_high_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(outlier_info) <- names(features)
names(outlier_info) <- c("num_outliers","proportion_outliers",
"num_low_outliers", "avg_low_outliers",
"num_high_outliers", "avg_high_outliers")
write.csv(outlier_info,output)
return(outlier_info)
}
library(stats)
library(moments)
descriptives <- function(file, output){
outlier_info <- data.frame()
features <- read.csv(file,stringsAsFactors = F, row.names = 1)
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
num_low_outliers <- sum(outs > mean(data))
avg_low_outliers <- mean(outs[outs > mean(data)])
num_high_outliers <- sum(outs < mean(data))
avg_high_outliers <- mean(outs[outs < mean(data)])
temp <-c(length(outs), length(outs)/length(data),
num_high_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(outlier_info) <- names(features)
names(outlier_info) <- c("num_outliers","proportion_outliers",
"num_low_outliers", "avg_low_outliers",
"num_high_outliers", "avg_high_outliers")
write.csv(outlier_info,output)
return(outlier_info)
}
outliers("../../Outputs/Features/cluster_inputs/features_cont.csv",
"../../Outputs/Descriptives/outlier_info.csv")
library(stats)
library(moments)
descriptives <- function(file, output){
outlier_info <- data.frame()
features <- read.csv(file,stringsAsFactors = F, row.names = 1)
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
num_low_outliers <- sum(outs > mean(data))
avg_low_outliers <- mean(outs[outs > mean(data)])
num_high_outliers <- sum(outs < mean(data))
avg_high_outliers <- mean(outs[outs < mean(data)])
temp <-c(length(outs), length(outs)/length(data),
num_high_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(outlier_info) <- names(features)
names(outlier_info) <- c("num_outliers","proportion_outliers",
"num_low_outliers", "avg_low_outliers",
"num_high_outliers", "avg_high_outliers")
write.csv(outlier_info,output)
return(outlier_info)
}
outliers("../../Outputs/Features/cluster_inputs/features_cont.csv",
"../../Outputs/Descriptives/outlier_info.csv")
library(stats)
library(moments)
outliers <- function(file, output){
outlier_info <- data.frame()
features <- read.csv(file,stringsAsFactors = F, row.names = 1)
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
num_low_outliers <- sum(outs > mean(data))
avg_low_outliers <- mean(outs[outs > mean(data)])
num_high_outliers <- sum(outs < mean(data))
avg_high_outliers <- mean(outs[outs < mean(data)])
temp <-c(length(outs), length(outs)/length(data),
num_high_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(outlier_info) <- names(features)
names(outlier_info) <- c("num_outliers","proportion_outliers",
"num_low_outliers", "avg_low_outliers",
"num_high_outliers", "avg_high_outliers")
write.csv(outlier_info,output)
return(outlier_info)
}
outliers("../../Outputs/Features/cluster_inputs/features_cont.csv",
"../../Outputs/Descriptives/outlier_info.csv")
trains_feat <- select(features, contains("trains_topoverall_freq_features"))
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value', -id, na.rm = TRUE) %>%
group_by(train) %>%
summarise(pct_users = n()/totalusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
library(dplyr)
library(tidyr)
View(trains_feat)
View(trains_feat)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value',  na.rm = TRUE) %>%
group_by(train) %>%
summarise(pct_users = n()/totalusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
nusers <- length(features)
nusers
length(data)
nusers <- nrow(features)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value',  na.rm = TRUE) %>%
group_by(train) %>%
summarise(pct_users = n()/nusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
View(trains_top_summary)
View(trains_top_summary)
?gather
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value')
View(trains_top_summary)
View(trains_top_summary)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train) %>%
summarise(pct_users = count(value > 0) /nusers,
mean_usage = mean(value),
median_usage = median(value))
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train) %>%
summarise(pct_users = (n()>0) /nusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
View(trains_top_summary)
View(trains_top_summary)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train) %>%
summarise(n()>0)
View(trains_top_summary)
View(trains_top_summary)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train) %>%
summarise(sum(n()>0))
View(trains_top_summary)
View(trains_top_summary)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train) %>%
summarise(countpos = count(value > 0),
total = nusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train)
View(trains_top_summary)
View(trains_top_summary)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train) %>%
summarise(countpos = count(value > 0))
?countif
??countif
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train) %>%
summarise(countpos = count(train,wt = value))
?count
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train) %>%
summarise(pct_users = sum(value != 0) /nusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
View(trains_top_summary)
View(trains_top_summary)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train) %>%
summarise(pct_users = n() /nusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
View(trains_top_summary)
View(trains_top_summary)
trains_top_summary <-  gather(trains_feat, key = 'train', value = 'value') %>%
group_by(train) %>%
summarise(pct_users = sum(value != 0) /nusers,
mean_usage = mean(value),
median_usage = median(value)) %>%
ungroup() %>% arrange(-pct_users)
View(trains_top_summary)
View(trains_top_summary)
View(trains_top_summary)
library(stats)
library(moments)
outliers <- function(file, output){
outlier_info <- data.frame()
features <- read.csv(file,stringsAsFactors = F, row.names = 1)
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
num_low_outliers <- sum(outs > mean(data))
avg_low_outliers <- mean(outs[outs > mean(data)])
num_high_outliers <- sum(outs < mean(data))
avg_high_outliers <- mean(outs[outs < mean(data)])
temp <-c(length(outs), length(outs)/length(data),
num_high_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(outlier_info) <- names(features)
names(outlier_info) <- c("num_outliers","proportion_outliers",
"num_low_outliers", "avg_low_outliers",
"num_high_outliers", "avg_high_outliers")
write.csv(outlier_info,output)
return(outlier_info)
}
outliers("../../Outputs/Features/cluster_inputs/features_cont.csv",
"../../Outputs/Descriptives/outlier_info.csv")
library(stats)
library(moments)
outliers <- function(file, output){
outlier_info <- data.frame()
features <- read.csv(file,stringsAsFactors = F, row.names = 1)
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
num_low_outliers <- sum(outs > mean(data))
avg_low_outliers <- mean(outs[outs > mean(data)])
num_high_outliers <- sum(outs < mean(data))
avg_high_outliers <- mean(outs[outs < mean(data)])
temp <-c(length(outs), length(outs)/length(data),
num_low_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(outlier_info) <- names(features)
names(outlier_info) <- c("num_outliers","proportion_outliers",
"num_low_outliers", "avg_low_outliers",
"num_high_outliers", "avg_high_outliers")
write.csv(outlier_info,output)
return(outlier_info)
}
outliers("../../Outputs/Features/cluster_inputs/features_cont.csv",
"../../Outputs/Descriptives/outlier_info.csv")
library(stats)
library(moments)
outliers <- function(file, output){
outlier_info <- data.frame()
features <- read.csv(file,stringsAsFactors = F, row.names = 1)
for (i in 1:ncol(features)){
data <- features[,i]
outs <- boxplot.stats(data)$out
num_low_outliers <- sum(outs < mean(data))
avg_low_outliers <- mean(outs[outs < mean(data)])
num_high_outliers <- sum(outs > mean(data))
avg_high_outliers <- mean(outs[outs > mean(data)])
temp <-c(length(outs), length(outs)/length(data),
num_low_outliers, avg_low_outliers,
num_high_outliers, avg_high_outliers)
outlier_info <- rbind(outlier_info, temp, stringsAsFactors = F)
}
row.names(outlier_info) <- names(features)
names(outlier_info) <- c("num_outliers","proportion_outliers",
"num_low_outliers", "avg_low_outliers",
"num_high_outliers", "avg_high_outliers")
write.csv(outlier_info,output)
return(outlier_info)
}
outliers("../../Outputs/Features/cluster_inputs/features_cont.csv",
"../../Outputs/Descriptives/outlier_info.csv")
library(stats)
library(moments)
descriptives <- function(path, files, output){
features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv",
stringsAsFactors = F, row.names = 1)
stats <- data.frame()
std <- c()
kur <- c()
skew <- c()
for (i in 1:ncol(features)){
data <- features[,i]
stats <- rbind(stats, summary(data, na.rm = T))
std <- c(std, sd(data, na.rm = T))
kur <- c(kur, kurtosis(data, na.rm = T))
skew <- c(skew, skewness(data, na.rm = T))
}
stats <- cbind(stats, std, kur, skew)
row.names(stats) <- names(features)
names(stats) <- c("Min", "Q1", "Med", "Mean", "Q3", "Max", "sd","kurtosis","skew")
write.csv(stats,output)
return(stats)
}
descriptives("../../Outputs/Features/cluster_inputs/features_cont.csv",
"../../Outputs/Descriptives/descriptive_stats_table_postinterpolation.csv")
library(stats)
library(moments)
descriptives <- function(path, files, output){
features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv",
stringsAsFactors = F, row.names = 1)
stats <- data.frame()
std <- c()
kur <- c()
skew <- c()
for (i in 1:ncol(features)){
data <- features[,i]
stats <- rbind(stats, summary(data, na.rm = T))
std <- c(std, sd(data, na.rm = T))
kur <- c(kur, kurtosis(data, na.rm = T))
skew <- c(skew, skewness(data, na.rm = T))
}
stats <- cbind(stats, std, kur, skew)
row.names(stats) <- names(features)
names(stats) <- c("Min", "Q1", "Med", "Mean", "Q3", "Max", "sd","kurtosis","skew")
write.csv(stats,output)
return(stats)
}
descriptives("../../Outputs/Features/cluster_inputs/features_cont.csv",
"../../Outputs/Descriptives/descriptive_stats_table_postinterpolation.csv")
library(stats)
library(moments)
descriptives <- function(path, output){
features <- read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv",
stringsAsFactors = F, row.names = 1)
stats <- data.frame()
std <- c()
kur <- c()
skew <- c()
for (i in 1:ncol(features)){
data <- features[,i]
stats <- rbind(stats, summary(data, na.rm = T))
std <- c(std, sd(data, na.rm = T))
kur <- c(kur, kurtosis(data, na.rm = T))
skew <- c(skew, skewness(data, na.rm = T))
}
stats <- cbind(stats, std, kur, skew)
row.names(stats) <- names(features)
names(stats) <- c("Min", "Q1", "Med", "Mean", "Q3", "Max", "sd","kurtosis","skew")
write.csv(stats,output)
return(stats)
}
descriptives("../../Outputs/Features/cluster_inputs/features_cont.csv",
"../../Outputs/Descriptives/descriptive_stats_table_postinterpolation.csv")
View(trains_feat)
