geom_freqpoly()+
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element
_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,2])) +
geom_freqpoly()+
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidith = sd(data[,i])/2)+
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
sd(data[,1])
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidith = sd(data[,1])/2)+
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,1])) +
geom_histogram()+
binwidith(sd(data[,1])/2) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidith = function(x) (sd(x)/2)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidith = function(x) (sd(x)/10)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidith = 10) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
?ggplot
ggplot(data, aes(x = data[,1])) +
geom_histogram() +
stat_bin(binwidth = function(x) (sd(x)/10))
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,1])) +
geom_histogram() +
stat_bin(binwidth = 10)+
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
?stat_bin
ggplot(data, aes(x = data[,1])) +
geom_histogram() +
stat_bin(binwidth = 29)+
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,1])) +
geom_histogram()
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidth = 29)
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidth = function(x) (sd(x)/10))
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidth = function(x) (sd(x)/2)
)
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidth = function(x) (sd(x)/2)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
for (i in 1:ncol(data)){
feature <- names(data[i])
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidth = function(x) (sd(x)/2)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggsave(paste0("../../Outputs/Plots/",feature,".png"))
}
for (i in 1:ncol(data)){
feature <- names(data[i])
ggplot(data, aes(x = data[,i])) +
geom_histogram(binwidth = function(x) (sd(x)/2)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggsave(paste0("../../Outputs/Plots/",feature,".png"))
}
range(data,1)
?range
ggplot(data, aes(x = data[,1])) +
geom_histogram(binwidth = function(x) ((max(x)-min(x))/1000)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,7])) +
geom_histogram(binwidth = function(x) ((max(x)-min(x))/1000)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,6])) +
geom_histogram(binwidth = function(x) ((max(x)-min(x))/1000)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
for (i in 1:ncol(data)){
feature <- names(data[i])
ggplot(data, aes(x = data[,i])) +
geom_histogram(binwidth = function(x) ((max(x)-min(x))/1000)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggsave(paste0("../../Outputs/Plots/",feature,".png"))
}
ggplot(data, aes(x = data[,1])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
for (i in 1:ncol(data)){
feature <- names(data[i])
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggsave(paste0("../../Outputs/Plots/",feature,"_bins60.png"))
}
data <-read.csv("../../Outputs/Features/cluster_inputs/features_cont.csv", row.names = 1,
header = T)
colnames(data) <- c( "Btwn Session Dur",
"Multi App Sessions",
"Notif Response Sess (med)",
"Notif Response Sess (std)",
"Notif Response App (med)",
"Notif Response App (std)",
"Repeat App Sessions",
"Repeat Whatsapp Sessions",
"Single App Sessions",
"Top 1 Response Time App",
"Top 2 Response Time App",
"Top 3 Response Time App" ,
"Top 1 Response Time Session",
"Top 2 Response Time Session" ,
"Top 3 Response Time Session",
"Top Train: FB App - FB Messenger",
"Top Train: FB App - Instagram",
"Top Train: FB App - WhatsApp",
"Top Train: FB Messenger - FB App",
"Top Train: FB Messenger - Snapchat",
"Top Train: Instagram - FB App",
"Top Train: Contacts - Call",
"Top Train: WhatsApp - Chrome",
"Top Train: WhatsApp - Facebook",
"Top Train: WhatsApp - Instagram",
"Top 1 Individ Train",
"Top 2 Individ Train",
"Top 3 Individ Train",
"Top 4 Individ Train",
"Top 5 Individ Train")
feature_type <- c("Duration (in secs)", "% of Sessions",
"Response Time (in secs)","Standard Deviation of Response Time (in secs)",
"Response Time (in secs)","Standard Deviation of Response Time (in secs)",
"% of Sessions","% of Sessions", "% of Sessions",
"Response Time (in secs)","Response Time (in secs)","Response Time (in secs)",
"Response Time (in secs)","Response Time (in secs)","Response Time (in secs)",
"% of Sessions","% of Sessions", "% of Sessions","% of Sessions","% of Sessions",
"% of Sessions","% of Sessions", "% of Sessions","% of Sessions","% of Sessions",
"% of Sessions","% of Sessions", "% of Sessions","% of Sessions","% of Sessions",
"% of Sessions")
summary(data[3])
ggplot(data, aes(x = data[,3])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
library(fitdistrplus)
library(ggplot2)
ggplot(data, aes(x = data[,3])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
i <- 3
feature <- names(data[i])
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
coord_cartesian(ylim = max(data[i])-1)+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
coord_cartesian(xlim = max(data[i])-1)+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
?xlim
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
xlim(0, max(data[i])-1)+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
xlim(0, max(data[,i])-1)+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
coord_cartesian(xlim = (0,max(data[i])-1)+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
coord_cartesian(xlim = (0,max(data[i])-1))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
coord_cartesian(xlim = c(0,max(data[i])-1))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
coord_cartesian(xlim = c(0,max(data[i])-100))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
quantile(data[,i], c(0.1, 0.9)
)
quantile(data[,i], c(0, 0.99))
quantile(data[,i], c(0, 0.98))
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
scale_y_continuous(limits = quantile(data[,i], c(0, 0.98)))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,i])) +
geom_histogram(bins = 60) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
scale_x_continuous(limits = quantile(data[,i], c(0, 0.985)))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggplot(data, aes(x = data[,i])) +
geom_histogram(binwidth = function(x) ((max(x)-min(x))/1000)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
scale_x_continuous(limits = quantile(data[,i], c(0, 0.985)))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
for (i in 1:ncol(data)){
i <- 3
feature <- names(data[i])
ggplot(data, aes(x = data[,i])) +
geom_histogram(binwidth = function(x) ((max(x)-min(x))/1000)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
scale_x_continuous(limits = quantile(data[,i], c(0, 0.985)))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggsave(paste0("../../Outputs/Plots/",feature,"_lim985.png"))
}
for (i in 1:ncol(data)){
#i <- 3
feature <- names(data[i])
ggplot(data, aes(x = data[,i])) +
geom_histogram(binwidth = function(x) ((max(x)-min(x))/1000)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
scale_x_continuous(limits = quantile(data[,i], c(0, 0.985)))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggsave(paste0("../../Outputs/Plots/",feature,"_lim985.png"))
}
outliers <- boxplot.stats(data[,i])
outliers
boxplot.stats(data[,i])
?boxplot.stats
boxplot.stats(data[,i])$out
min(boxplot.stats(data[,i])$out)
?quantile
summary(data[,i])$`3rd. Q`
summary(data[,i])
summary(data[,i])$`3rd Qu.`
summary(data[,i])[`3rd Qu.`]
?summary
summary(data[,i])[5]
?IQR
IQR(data[,i])
?outlier
??outlier
?quartile
quantile(data[,i],.75)
quantile(data[,i],.75) + (1.5*IQR(data[,i]))
as.numeric(quantile(data[,i],.75)) + (1.5*IQR(data[,i]))
feature <- names(data[i])
outlier <- as.numeric(quantile(data[,i],.75)) + (1.5*IQR(data[,i]))
ggplot(data, aes(x = data[,i])) +
geom_histogram(binwidth = function(x) ((max(x)-min(x))/1000)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
scale_x_continuous(limits = c(0,outlier))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
for (i in 1:ncol(data)){
#i <- 3
feature <- names(data[i])
outlier <- as.numeric(quantile(data[,i],.75)) + (1.5*IQR(data[,i]))
ggplot(data, aes(x = data[,i])) +
geom_histogram(binwidth = function(x) ((max(x)-min(x))/1000)) +
labs(y="Number of Users",x=feature_type[i], title = paste0("Distribution of ",feature))+
scale_x_continuous(limits = c(0,outlier))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5), legend.position="none")
ggsave(paste0("../../Outputs/Plots/",feature,"_outlier.png"))
}
library(ggplot2)
pca5results <- read.csv("../../Outputs/Clustering/r_db_clustering_summary_pca5_noiseadj_more.csv")
pca5results <- read.csv("../Outputs/Clustering/r_db_clustering_summary_pca5_noiseadj_more.csv")
library(ggplot2)
pca5results <- read.csv("../../Outputs/Clustering/r_db_clustering_summary_pca5_noiseadj_seed111_more.csv")
pca10results <- read.csv("../../Outputs/Clustering/r_db_clustering_summary_pca10_noiseadj_seed111_more.csv")
pca24results <- read.csv("../../Outputs/Clustering/r_db_clustering_summary_pca24_noiseadj_seed111.csv")
pca5results$n_clusters <- pca5results$n_clusters -1
pca5results$n_pca <- 5
pca10results$n_clusters <- pca10results$n_clusters -1
pca10results$n_pca <- 10
pca24results$n_clusters <- pca24results$n_clusters -1
pca24results$n_pca <- 24
combined <- rbind(pca5results,pca10results)
ggplot(combined, aes(x=Noise, y=SSE, cols= as.factor(n_pca), color = as.factor(n_pca))) +
geom_line() +
labs(title = "Noise vs SSE for PCA Components", color="PCA Num")+
theme_bw()+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=14),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
theme(plot.title = element_text(hjust = 0.5))
combined <- rbind(pca5results,pca10results, pca24results)
ggplot(combined, aes(x=Noise, y=SSE, cols= as.factor(n_pca), color = as.factor(n_pca))) +
geom_line() +
labs(title = "Noise vs SSE for PCA Components", color="PCA Num")+
theme_bw()+
theme(axis.text = element_text(size=12),
axis.title = element_text(size=14),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
theme(plot.title = element_text(hjust = 0.5))
library(factoextra)
library(cluster)
library(fpc)
library(NbClust)
library(ggplot2)
library(plotly)
features <-read.csv("../../Outputs/Features/cluster_inputs/features_z_pca5.csv",
header = FALSE)
d <- dist(features, method = "euclidean") # distance matrix
dbcluster <- fpc::dbscan(features, 10, 14, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
db_stats
db_stats2
View(pca10results)
View(pca10results)
View(combined)
View(combined)
?dbscan
dbcluster <- fpc::dbscan(features, 2, 50, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T)
fviz_cluster(dbcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"),
pointsize = 1.5, labelsize = 12, main = "DBSCAN Clusters",
shape = 19, outlier.shape = 4,show.clust.cent = F,
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(plot.title = element_text(hjust = 0.5))
plot_ly(x =features$V2,y = features$V3,  z=features$V4,
type="scatter3d", mode="markers", color=factor(dbcluster$cluster))
View(pca5results)
set.seed(111)
kvals <- c(1,2,3,4,5,6,7,8,9,10)
ksummary <- data.frame()
for (k in kvals){
kcluster <- fpc::kmeans(features, k)
stats <- cluster.stats(d, kcluster$cluster)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(k, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2, kcluster$tot.withinss,  kcluster$betweenss)
ksummary <- rbind(ksummary, temp)
}
colnames(ksummary) <- c("k",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2", "kcl_withinss", "kclbetweenss")
ksummary <- data.frame()
for (k in kvals){
kcluster <- fpc::kmeans(features, k)
stats <- cluster.stats(d, kcluster$cluster)
#stats <- cluster.stats(d,  dbcluster$cluster)
temp <- c(k, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2, kcluster$tot.withinss,  kcluster$betweenss)
ksummary <- rbind(ksummary, temp)
}
library(factoextra)
library(cluster)
library(fpc)
library(NbClust)
library(ggplot2)
library(plotly)
set.seed(111)
kvals <- c(1,2,3,4,5,6,7,8,9,10)
ksummary <- data.frame()
for (k in kvals){
kcluster <- fpc::kmeans(features, k)
stats <- cluster.stats(d, kcluster$cluster)
temp <- c(k, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2, kcluster$tot.withinss,  kcluster$betweenss)
ksummary <- rbind(ksummary, temp)
}
?kmeans
for (k in kvals){
kcluster <- kmeans(features, k)
stats <- cluster.stats(d, kcluster$cluster)
temp <- c(k, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2, kcluster$tot.withinss,  kcluster$betweenss)
ksummary <- rbind(ksummary, temp)
}
colnames(ksummary) <- c("k",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2", "kcl_withinss", "kclbetweenss")
kvals <- c(2,3,4,5,6,7,8,9,10)
ksummary <- data.frame()
for (k in kvals){
kcluster <- kmeans(features, k)
stats <- cluster.stats(d, kcluster$cluster)
temp <- c(k, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2, kcluster$tot.withinss,  kcluster$betweenss)
ksummary <- rbind(ksummary, temp)
}
colnames(ksummary) <- c("k",
"n_clusters","max_cl_size","min_cl_size",'Noise',"SSE","avg_within","avg_btn",
"Sil","Dunn2", "kcl_withinss", "kclbetweenss")
kcluster <- kmeans(features, 1)
stats <- cluster.stats(d, kcluster$cluster)
View(ksummary)
View(ksummary)
kcluster
kcluster$tot.withinss
kvals <- c(11,12)
for (k in kvals){
kcluster <- kmeans(features, k)
stats <- cluster.stats(d, kcluster$cluster)
temp <- c(k, stats$cluster.number, max(stats$cluster.size), stats$min.cluster.size, stats$noisen,
stats$within.cluster.ss,stats$average.within, stats$average.between,
stats$avg.silwidth, stats$dunn2, kcluster$tot.withinss,  kcluster$betweenss)
ksummary <- rbind(ksummary, temp)
}
write.csv(ksummary, "../../Outputs/Clustering/r_kmeans_summary_seed111.csv", row.names = F)
kcluster <- kmeans(features, 1)
kcluster$tot.withinss
kcluster$betweenss
kcluster <- kmeans(features, 9)
fviz_cluster(kcluster, features,geom = "point", stand = FALSE,
choose.vars = c("V2", "V3"),
pointsize = 1.5, labelsize = 12, main = "K-Means Clusters",
xlab = "PCA Component 1 (17.0%)",
ylab = "PCA Component 2 (11.5%)",
shape = 19, outlier.shape = 4,show.clust.cent = F,
ggtheme = theme_bw(),legend.title = "Clusters")+
theme(plot.title = element_text(hjust = 0.5))
dbcluster <- fpc::dbscan(features, 2, 50, method = "raw")
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T)
dbcluster_noiseadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1)
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T, alt.clustering = kcluster)
?cluster.stats
db_stats2 <- cluster.stats(d, dbcluster_noiseadj, noisecluster = T, alt.clustering = kcluster$cluster)
db_stats2
??shift
db_stats <- cluster.stats(d,  dbcluster$cluster, noisecluster = T,  alt.clustering = kcluster$cluster)
db_stats
?replace
dbcluster$cluster -1
dbcluster$cluster
dbcluster_noiseadj -1
dbcluster_altadj <- replace(dbcluster$cluster, dbcluster$cluster==0, max(dbcluster$cluster)+1) -1
db_stats3 <- cluster.stats(d, dbcluster_altadj, noisecluster = T, alt.clustering = kcluster$cluster)
db_stats3
View(combined)
View(combined)
